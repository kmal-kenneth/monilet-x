name: CI

# This workflow will run for any pull request or pushed commit
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "flatpak"
  flatpak:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # This job runs in a special container designed for building Flatpaks for AppCenter
    container:
      image: ghcr.io/elementary/flatpak-platform/runtime:6
      options: --privileged

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v3

      - name: Install Flutter build tools
        run: apt update -y && apt install -y ninja-build cmake libclang-dev libgtk-3-dev clang pkg-config libglu1-mesa wget curl appstream meson gettext

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Enable desktop support
        run: flutter config --enable-linux-desktop

      - name: Flutter version
        run: flutter --version

      - name: Install Corrosion
        run: |
          git clone https://github.com/corrosion-rs/corrosion.git
          cmake -Scorrosion -Bbuild -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          cmake --install build --config Release

      - name: Build Flutter app
        run: flutter build linux

      - name: Build Tarball
        run: ./tarball.sh
        shell: bash
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_TAG_NAME: ${{ GITHUB.event.release.tag_name }}

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          echo "$PWD"

      - name: Build AppImage
        run: ./appimage.sh
        shell: bash
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_TAG_NAME: ${{ GITHUB.event.release.tag_name }}

      - name: App tar sha256 sum
        run: sha256sum com.github.kmalkenneth.monilet-*-x86_64.tar.gz

        # Builds your flatpak manifest using the Flatpak Builder action
      - uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v3
        with:
          # This is the name of the Bundle file we're building and can be anything you like
          bundle: MyApp.flatpak
          # This uses your app's RDNN ID
          manifest-path: com.github.kmalkenneth.monilet.yml

          # You can automatically run any of the tests you've created as part of this workflow
          run-tests: true

          # These lines specify the location of the elementary Runtime and Sdk
          repository-name: appcenter
          repository-url: https://flatpak.elementary.io/repo.flatpakrepo
          cache-key: "flatpak-builder-${{ github.sha }}"

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./com.github.kmalkenneth.monilet-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'continuous' }}
          overwrite: true
